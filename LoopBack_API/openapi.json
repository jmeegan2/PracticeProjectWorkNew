
{
  "openapi": "3.0.0",
  "info": {
    "title": "demo",
    "version": "0.0.1",
    "description": "loopbackStrongLoop",
    "contact": {
      "name": "James Meegan",
      "email": "James.Meegan@softrams.com"
    }
  },
  "paths": {
    "/patients/count": {
      "get": {
        "x-controller-name": "PatientController",
        "x-operation-name": "count",
        "tags": [
          "PatientController"
        ],
        "responses": {
          "200": {
            "description": "Patient model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Patient.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Patient>"
                }
              }
            }
          }
        ],
        "operationId": "PatientController.count"
      }
    },
    "/patients/{id}": {
      "put": {
        "x-controller-name": "PatientController",
        "x-operation-name": "replaceById",
        "tags": [
          "PatientController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Patient PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patient"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "PatientController.replaceById"
      },
      "patch": {
        "x-controller-name": "PatientController",
        "x-operation-name": "updateById",
        "tags": [
          "PatientController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Patient PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "PatientController.updateById"
      },
      "get": {
        "x-controller-name": "PatientController",
        "x-operation-name": "findById",
        "tags": [
          "PatientController"
        ],
        "responses": {
          "200": {
            "description": "Patient model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient.Filter"
                }
              }
            }
          }
        ],
        "operationId": "PatientController.findById"
      },
      "delete": {
        "x-controller-name": "PatientController",
        "x-operation-name": "deleteById",
        "tags": [
          "PatientController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Patient DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "PatientController.deleteById"
      }
    },
    "/patients": {
      "post": {
        "x-controller-name": "PatientController",
        "x-operation-name": "create",
        "tags": [
          "PatientController"
        ],
        "responses": {
          "200": {
            "description": "Patient model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPatient"
              }
            }
          }
        },
        "operationId": "PatientController.create"
      },
      "patch": {
        "x-controller-name": "PatientController",
        "x-operation-name": "updateAll",
        "tags": [
          "PatientController"
        ],
        "responses": {
          "200": {
            "description": "Patient PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Patient.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Patient>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientPartial"
              }
            }
          }
        },
        "operationId": "PatientController.updateAll"
      },
      "get": {
        "x-controller-name": "PatientController",
        "x-operation-name": "find",
        "tags": [
          "PatientController"
        ],
        "responses": {
          "200": {
            "description": "Array of Patient model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "PatientController.find"
      }
    },
    "/ping": {
      "get": {
        "x-controller-name": "PingController",
        "x-operation-name": "ping",
        "tags": [
          "PingController"
        ],
        "responses": {
          "200": {
            "description": "Ping Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        },
        "operationId": "PingController.ping"
      }
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "components": {
    "schemas": {
      "Patient": {
        "title": "Patient",
        "type": "object",
        "properties": {
          "idPatient": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "DOB": {
            "type": "string",
            "format": "date-time"
          },
          "sex": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "DOB",
          "sex"
        ],
        "additionalProperties": false
      },
      "NewPatient": {
        "title": "NewPatient",
        "type": "object",
        "description": "(tsType: Patient, schemaOptions: { title: 'NewPatient' })",
        "properties": {
          "idPatient": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "DOB": {
            "type": "string",
            "format": "date-time"
          },
          "sex": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "DOB",
          "sex"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Patient"
      },
      "PatientWithRelations": {
        "title": "PatientWithRelations",
        "type": "object",
        "description": "(tsType: PatientWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "idPatient": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "DOB": {
            "type": "string",
            "format": "date-time"
          },
          "sex": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "DOB",
          "sex"
        ],
        "additionalProperties": false,
        "x-typescript-type": "PatientWithRelations"
      },
      "PatientPartial": {
        "title": "PatientPartial",
        "type": "object",
        "description": "(tsType: Partial<Patient>, schemaOptions: { partial: true })",
        "properties": {
          "idPatient": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "DOB": {
            "type": "string",
            "format": "date-time"
          },
          "sex": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Patient>"
      },
      "loopback.Count": {
        "type": "object",
        "title": "loopback.Count",
        "x-typescript-type": "@loopback/repository#Count",
        "properties": {
          "count": {
            "type": "number"
          }
        }
      },
      "Patient.Filter": {
        "type": "object",
        "title": "Patient.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "idPatient": {
                    "type": "boolean"
                  },
                  "firstName": {
                    "type": "boolean"
                  },
                  "lastName": {
                    "type": "boolean"
                  },
                  "DOB": {
                    "type": "boolean"
                  },
                  "sex": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "idPatient",
                    "firstName",
                    "lastName",
                    "DOB",
                    "sex"
                  ],
                  "example": "idPatient"
                },
                "uniqueItems": true
              }
            ],
            "title": "Patient.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Patient>"
      },
      "Patient.Filter1": {
        "type": "object",
        "title": "Patient.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Patient.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "idPatient": {
                    "type": "boolean"
                  },
                  "firstName": {
                    "type": "boolean"
                  },
                  "lastName": {
                    "type": "boolean"
                  },
                  "DOB": {
                    "type": "boolean"
                  },
                  "sex": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "idPatient",
                    "firstName",
                    "lastName",
                    "DOB",
                    "sex"
                  ],
                  "example": "idPatient"
                },
                "uniqueItems": true
              }
            ],
            "title": "Patient.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Patient>"
      },
      "PingResponse": {
        "type": "object",
        "title": "PingResponse",
        "properties": {
          "greeting": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "properties": {
              "Content-Type": {
                "type": "string"
              }
            },
            "additionalProperties": true
          }
        }
      }
    }
  }
}
